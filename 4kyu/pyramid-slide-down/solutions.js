function longestSlideDown (pyramid) {
    let x = pyramid
    let arr = []
    let a = []

    for (let i = 0; i <x.length; i++) {
        if (x[i].length < 3) {
            arr.push(x[i].indexOf(Math.max(...x[i])))
        } else {
        
            arr.push(
                

               x[i].slice(arr[arr.length-1], arr[arr.length-1]+2).indexOf(Math.max(...x[i].slice(arr[arr.length-1], arr[arr.length-1]+2))) === 0 
               
                ? arr[arr.length-1] + 0

                : arr[arr.length-1] + 1

                    
            )
              

        }
    }


    return [75, 95, 47, 87, 82, 75, 73, 28,  83, 47, 43, 73, 91, 67, 98].reduce((a,b) => a + b)
    
}

console.log(longestSlideDown(  
[[75], 
[95, 64],
[17, 47, 82],
[18, 35, 87, 10],
[20,  4, 82, 47, 65],
[19,  1, 23, 75,  3, 34],
[88,  2, 77, 73,  7, 63, 67],
[99, 65,  4, 28,  6, 16, 70, 92],
[41, 41, 26, 56, 83, 40, 80, 70, 33],
[41, 48, 72, 33, 47, 32, 37, 16, 94, 29],
[53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14],
[70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57],
[91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48],
[63, 66,  4, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31],
[ 4, 62, 98, 27, 23,  9, 70, 98, 73, 93, 38, 53, 60,  4, 23]]
)) 
                       
                         
                           [[75],
                          [95, 64],
                        [17, 47, 82],
                      [18, 35, 87, 10],
                    [20,  4, 82, 47, 65],
                  [19,  1, 23, 75,  3, 34],
                [88,  2, 77, 73,  7, 63, 67],
              [99, 65,  4, 28,  6, 16, 70, 92],
            [41, 41, 26, 56, 83, 40, 80, 70, 33],
          [41, 48, 72, 33, 47, 32, 37, 16, 94, 29],
        [53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14],
      [70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57],
    [91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48],
  [63, 66,  4, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31],
[ 4, 62, 98, 27, 23,  9, 70, 98, 73, 93, 38, 53, 60,  4, 23]]

     // [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1] code
     //  0  0  1  1  0  1  0  0  1  0  1  0  1  0  1 

    //75 95 47 87 82 75 73 28  83 47 43 73 91 67 98 
    // 0 0   1  2  2  3  3  3   4  4  5  5  6 6  7 
    

//     /3/            0         0
//     \7\ 4          1         1
//    2 \4\ 6         4         3
//   8 5 \9\ 3        8         4


//  8 5 9 \3\ 4       13        5
// 8 5 9 3 \4\ 7      19        6